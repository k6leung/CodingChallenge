<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<task:executor id="fileTaskExecutor" pool-size="10" />

	<bean id="backupFileExtensionGenerator" class="com.challenge.coding.integration.common.file.backup.fileExtension.DateTimeFileExtensionGenerator">
		<property name="formatString" value="yyyyMMddHHmmss" />
		<property name="defaultExtension" value="backup" />
	</bean>
	
	<int-file:inbound-channel-adapter id="inputFileChannelAdapter"
									  directory="${file.integration.input.directory}" 
									  filename-pattern="data*.csv"
									  channel="fileEnrichingChannel" 
									  prevent-duplicates="false">
		<int:poller task-executor="fileTaskExecutor" 
					fixed-delay="600000"
					error-channel="fileExceptionHandlingChannel" />
	</int-file:inbound-channel-adapter>

	<int:channel id="fileEnrichingChannel" />
	
	<bean id="batchFileLineSplitter" 
		  class="com.challenge.coding.integration.common.file.parsing.stringSplit.SimpleDelimitedStringSplitterImpl">
		<property name="delimiter" value="|" />
	</bean>
	
	<bean id="inputFileParsingMessageHeaderEnricher"
		  class="com.challenge.coding.integration.file.input.message.header.enricher.InputFileParsingMessageHeaderEnricher">
		  <property name="lineSplitter" ref="batchFileLineSplitter" />
	</bean>
		
	<!-- cannot simply transform the payload because payload is a File object and we need it for later file operations -->
	<!-- so simply parse the file and store the result in the message header -->
	<int:header-enricher input-channel="fileEnrichingChannel"
						 output-channel="fileProcessingChannel">
		<int:header name="dataRecords" method="parsePayload" ref="inputFileParsingMessageHeaderEnricher"/>
	</int:header-enricher>
	
	<int:channel id="fileProcessingChannel" />
	
	<bean id="fileSiteReportBatchRepository" class="com.challenge.coding.integration.common.jdbcRepository">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		<property name="deleteStatement" value="${file.delete.sql.statement}" />
		<property name="batchInsertStatement" value="${file.batch.insert.sql.statement}" />
	</bean>
	
	<bean id="jdbcBatchInsertService" class="com.challenge.coding.integration.file.service.JdbcFileBatchInsertService">
		<property name="dataRecordHeaderName" value="dataRecords" />
		<property name="genericSiteReportBatchRepository" ref="fileSiteReportBatchRepository" />
	</bean>
	
	<int:service-activator input-channel="fileProcessingChannel" 
						   output-channel="successFileBackupChannel"
						   ref="jdbcBatchInsertService" 
						   method="processMessage" />
						   
	<int:channel id="successFileBackupChannel" />
	
	 <bean id="successFileMovingService" class="com.challenge.coding.integration.common.file.move.BackupFileMovingService">
	 	<property name="outputDirectoryFullPath" value="${file.integration.success.output.directory}" />
	 	<property name="fileExtensionGenerator" ref="backupFileExtensionGenerator" />
	 </bean>
	 
	 <int:service-activator input-channel="successFileBackupChannel"
						   output-channel="successFileLoggingChannel"
						   ref="successFileMovingService"
						   method="moveFile" />
	 
	 <int:channel id="successFileLoggingChannel" />
		   
	 <int:logging-channel-adapter channel="successFileLoggingChannel"
								  level="INFO"
								  log-full-message="true" />					   
	
	 <!-- error handling starts -->
	 <int:channel id="fileExceptionHandlingChannel" />
	 
	 <bean id="errorFileMovingService" class="com.challenge.coding.integration.common.file.move.BackupFileMovingService">
		<property name="outputDirectoryFullPath" value="${file.integration.fail.output.directory}" />
		<property name="fileExtensionGenerator" ref="backupFileExtensionGenerator" />
	 </bean>
	 
	 <int:service-activator input-channel="fileExceptionHandlingChannel"
						   output-channel="failFileLoggingChannel"
						   ref="errorFileMovingService" 
						   method="moveFileOnError" />
						   
	<int:channel id="failFileLoggingChannel" />
		   
	<int:logging-channel-adapter channel="failFileLoggingChannel"
								 level="ERROR"
								 log-full-message="true" />
</beans>